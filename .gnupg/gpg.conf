# Good info: https://we.riseup.net/riseuplabs+paow/openpgp-best-practices
#
no-greeting
default-recipient-self
no-greeting
local-user 0xF8BBCE34A05A4B660954077AF846AAB8281B3670
default-key 0xF8BBCE34A05A4B660954077AF846AAB8281B3670
encrypt-to 0xF8BBCE34A05A4B660954077AF846AAB8281B3670

# TOFU requires GPG 2.1.10+
#trust-model tofu+pgp
#tofu-default-policy unknown

keyserver-options no-honor-keyserver-url
keyserver-options no-auto-key-retrieve

# Use Tor
#keyserver-options http-proxy=socks4a://127.0.0.1:8123
#keyserver-options http-proxy=socks5h://127.0.0.1:9050


use-agent
# Deprecate SHA-1: http://www.debian-administration.org/users/dkg/weblog/48
# http://keyring.debian.org/creating-key.html
# https://github.com/ioerror/duraconf/blob/master/configs/gnupg/gpg.conf
personal-digest-preferences SHA512 SHA384 SHA256 SHA224
cert-digest-algo SHA512
default-preference-list SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP Uncompressed
# Other tweaks from
# https://www.void.gr/kargig/blog/2013/12/02/creating-a-new-gpg-key-with-subkeys/
# When outputting certificates, view user IDs distinctly from keys:
fixed-list-mode
# Long keyids are more collision-resistant than short keyids (it's trivial to make a key with any desired short keyid)
keyid-format 0xlong
#fingerprint
# You should always know at a glance which User IDs gpg thinks are legitimately bound to the keys in your keyring:
verify-options show-uid-validity
min-cert-level 1
list-options show-uid-validity
# prevent version string from appearing in your signatures/public keys
no-emit-version 
# Automatically find keys in DNS as well as key servers
# http://www.gushi.org/make-dns-cert/HOWTO.html
#auto-key-locate cert pka

# Try to keep the keychain clean. May or may not be successful
#import-options import-clean
#export-options export-clean
#keyserver-options no-include-revoked,no-include-disabled

ask-cert-level

# Primary keys
trusted-key 0xE9FE10A5A7E4E8D5C8C5D7AC2170135805AEC3CE
trusted-key 0xF8BBCE34A05A4B660954077AF846AAB8281B3670
